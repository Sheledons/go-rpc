// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.9.0
// source: message.proto

package protoc

import (
	any "github.com/golang/protobuf/ptypes/any"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AnyOriginalType int32

const (
	AnyOriginalType_STRING   AnyOriginalType = 0
	AnyOriginalType_INT_8    AnyOriginalType = 1
	AnyOriginalType_INT_16   AnyOriginalType = 2
	AnyOriginalType_INT_32   AnyOriginalType = 3
	AnyOriginalType_INT_64   AnyOriginalType = 4
	AnyOriginalType_UINT_8   AnyOriginalType = 5
	AnyOriginalType_UINT_16  AnyOriginalType = 6
	AnyOriginalType_UINT_32  AnyOriginalType = 7
	AnyOriginalType_UINT_64  AnyOriginalType = 8
	AnyOriginalType_FLOAT_32 AnyOriginalType = 9
	AnyOriginalType_FLOAT_64 AnyOriginalType = 10
	AnyOriginalType_BOOL     AnyOriginalType = 11
	AnyOriginalType_STRUCT   AnyOriginalType = 12
	AnyOriginalType_BYTE     AnyOriginalType = 13
	AnyOriginalType_MAP      AnyOriginalType = 14
	AnyOriginalType_SLICE    AnyOriginalType = 15
	AnyOriginalType_ARRAY    AnyOriginalType = 16
)

// Enum value maps for AnyOriginalType.
var (
	AnyOriginalType_name = map[int32]string{
		0:  "STRING",
		1:  "INT_8",
		2:  "INT_16",
		3:  "INT_32",
		4:  "INT_64",
		5:  "UINT_8",
		6:  "UINT_16",
		7:  "UINT_32",
		8:  "UINT_64",
		9:  "FLOAT_32",
		10: "FLOAT_64",
		11: "BOOL",
		12: "STRUCT",
		13: "BYTE",
		14: "MAP",
		15: "SLICE",
		16: "ARRAY",
	}
	AnyOriginalType_value = map[string]int32{
		"STRING":   0,
		"INT_8":    1,
		"INT_16":   2,
		"INT_32":   3,
		"INT_64":   4,
		"UINT_8":   5,
		"UINT_16":  6,
		"UINT_32":  7,
		"UINT_64":  8,
		"FLOAT_32": 9,
		"FLOAT_64": 10,
		"BOOL":     11,
		"STRUCT":   12,
		"BYTE":     13,
		"MAP":      14,
		"SLICE":    15,
		"ARRAY":    16,
	}
)

func (x AnyOriginalType) Enum() *AnyOriginalType {
	p := new(AnyOriginalType)
	*p = x
	return p
}

func (x AnyOriginalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnyOriginalType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[0].Descriptor()
}

func (AnyOriginalType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[0]
}

func (x AnyOriginalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnyOriginalType.Descriptor instead.
func (AnyOriginalType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

type RpcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ServiceName string    `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	MethodName  string    `protobuf:"bytes,3,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`
	Params      []*RpcAny `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *RpcRequest) Reset() {
	*x = RpcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRequest) ProtoMessage() {}

func (x *RpcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRequest.ProtoReflect.Descriptor instead.
func (*RpcRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *RpcRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RpcRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *RpcRequest) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *RpcRequest) GetParams() []*RpcAny {
	if x != nil {
		return x.Params
	}
	return nil
}

type RpcResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ServiceName string    `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Code        int32     `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Err         string    `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"`
	Body        []*RpcAny `protobuf:"bytes,5,rep,name=body,proto3" json:"body,omitempty"`
}

func (x *RpcResponse) Reset() {
	*x = RpcResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcResponse) ProtoMessage() {}

func (x *RpcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcResponse.ProtoReflect.Descriptor instead.
func (*RpcResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *RpcResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RpcResponse) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *RpcResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RpcResponse) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RpcResponse) GetBody() []*RpcAny {
	if x != nil {
		return x.Body
	}
	return nil
}

type RpcAny struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    AnyOriginalType `protobuf:"varint,1,opt,name=type,proto3,enum=entity.AnyOriginalType" json:"type,omitempty"`
	EleType AnyOriginalType `protobuf:"varint,2,opt,name=eleType,proto3,enum=entity.AnyOriginalType" json:"eleType,omitempty"`
	Value   []*any.Any      `protobuf:"bytes,3,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *RpcAny) Reset() {
	*x = RpcAny{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcAny) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAny) ProtoMessage() {}

func (x *RpcAny) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAny.ProtoReflect.Descriptor instead.
func (*RpcAny) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *RpcAny) GetType() AnyOriginalType {
	if x != nil {
		return x.Type
	}
	return AnyOriginalType_STRING
}

func (x *RpcAny) GetEleType() AnyOriginalType {
	if x != nil {
		return x.EleType
	}
	return AnyOriginalType_STRING
}

func (x *RpcAny) GetValue() []*any.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x88, 0x01, 0x0a, 0x0a, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52,
	0x70, 0x63, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x8a, 0x01,
	0x0a, 0x0b, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x70,
	0x63, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x94, 0x01, 0x0a, 0x06, 0x52,
	0x70, 0x63, 0x41, 0x6e, 0x79, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x6e, 0x79,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x6e, 0x79,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x65, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x2a, 0xda, 0x01, 0x0a, 0x0f, 0x41, 0x6e, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x5f, 0x38, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x49, 0x4e, 0x54, 0x5f, 0x31, 0x36, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e, 0x54, 0x5f,
	0x33, 0x32, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e, 0x54, 0x5f, 0x36, 0x34, 0x10, 0x04,
	0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49, 0x4e, 0x54, 0x5f, 0x38, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x49, 0x4e, 0x54, 0x5f, 0x31, 0x36, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x49, 0x4e,
	0x54, 0x5f, 0x33, 0x32, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x49, 0x4e, 0x54, 0x5f, 0x36,
	0x34, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x5f, 0x33, 0x32, 0x10,
	0x09, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x5f, 0x36, 0x34, 0x10, 0x0a, 0x12,
	0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52,
	0x55, 0x43, 0x54, 0x10, 0x0c, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x59, 0x54, 0x45, 0x10, 0x0d, 0x12,
	0x07, 0x0a, 0x03, 0x4d, 0x41, 0x50, 0x10, 0x0e, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x4c, 0x49, 0x43,
	0x45, 0x10, 0x0f, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52, 0x52, 0x41, 0x59, 0x10, 0x10, 0x42, 0x0b,
	0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_message_proto_goTypes = []interface{}{
	(AnyOriginalType)(0), // 0: entity.AnyOriginalType
	(*RpcRequest)(nil),   // 1: entity.RpcRequest
	(*RpcResponse)(nil),  // 2: entity.RpcResponse
	(*RpcAny)(nil),       // 3: entity.RpcAny
	(*any.Any)(nil),      // 4: google.protobuf.Any
}
var file_message_proto_depIdxs = []int32{
	3, // 0: entity.RpcRequest.params:type_name -> entity.RpcAny
	3, // 1: entity.RpcResponse.body:type_name -> entity.RpcAny
	0, // 2: entity.RpcAny.type:type_name -> entity.AnyOriginalType
	0, // 3: entity.RpcAny.eleType:type_name -> entity.AnyOriginalType
	4, // 4: entity.RpcAny.value:type_name -> google.protobuf.Any
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcAny); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		EnumInfos:         file_message_proto_enumTypes,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
